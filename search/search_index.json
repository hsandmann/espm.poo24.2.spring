{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#microsservicos","title":"Microsservi\u00e7os","text":""},{"location":"#arquitetura-limpa","title":"Arquitetura Limpa","text":""},{"location":"#criando-um-microsservico-com-spring-boot","title":"Criando um Microsservi\u00e7o com Spring Boot","text":"<p>Initializr \u00e9 uma ferramenta web que permite que voc\u00ea crie rapidamente um projeto Spring Boot. Voc\u00ea pode selecionar as depend\u00eancias que deseja incluir em seu projeto, como Spring Web, JPA, Spring Data MongoDB, entre outras. Intializr</p>"},{"location":"#compilando-com-maven","title":"Compilando com Maven","text":"mvn clean package spring-boot:run"},{"location":"#dockerinando-o-microsservico","title":"Dockerinando o Microsservi\u00e7o","text":""},{"location":"#referencias","title":"Refer\u00eancias","text":"<ol> <li> <p>The Clean Architecture \u21a9</p> </li> <li> <p>Apache Maven Project \u21a9</p> </li> <li> <p>Maven Repository \u21a9</p> </li> </ol>"},{"location":"account/","title":"Account","text":"<p>1.</p> <p>Primeiro passo \u00e9 criar o projeto no Spring Boot, para isso \u00e9 aconselh\u00e1vel utilizar o gerador de projetos que pode ser acessado atrav\u00e9s do link Spring Initializr.</p> <pre><code>classDiagram\n    namespace account {\n        class AccountController {\n            +create(AccountIn accountIn): AccountOut\n            +delete(String id): void\n            +findAll(): List&lt;AccountOut&gt;\n            +findById(String id): AccountOut\n        }\n        class AccountIn {\n            -String name\n            -String email\n            -String password\n        }\n        class AccountOut {\n            -String id\n            -String name\n            -String email\n        }\n    }\n    namespace service {\n        class AccountResource {\n            +create(AccountIn accountIn): AccountOut\n            +delete(String id): void\n            +findAll(): List&lt;AccountOut&gt;\n            +findById(String id): AccountOut\n        }\n        class AccountService {\n            +create(AccountIn accountIn): AccountOut\n            +delete(String id): void\n            +findAll(): List&lt;AccountOut&gt;\n            +findById(String id): AccountOut\n        }\n        class AccountRepository {\n            +create(AccountIn accountIn): AccountOut\n            +delete(String id): void\n            +findAll(): List&lt;AccountOut&gt;\n            +findById(String id): AccountOut\n        }\n        class Account {\n            -String id\n            -String name\n            -String email\n            -String password\n        }\n        class AccountModel {\n            +create(AccountIn accountIn): AccountOut\n            +delete(String id): void\n            +findAll(): List&lt;AccountOut&gt;\n            +findById(String id): AccountOut\n        }\n    }\n    &lt;&lt;Interface&gt;&gt; AccountController\n    AccountController ..&gt; AccountIn\n    AccountController ..&gt; AccountOut\n\n    &lt;&lt;Interface&gt;&gt; AccountRepository\n    AccountController &lt;|-- AccountResource\n    AccountResource *-- AccountService\n    AccountService *-- AccountRepository\n    AccountService ..&gt; Account\n    AccountService ..&gt; AccountModel\n    AccountRepository ..&gt; AccountModel</code></pre> Account <pre><code>\ud83d\udcc1 account\n\u251c\u2500\u2500 \ud83d\udcc1 src\n\u2502   \u2514\u2500\u2500 \ud83d\udcc1 main\n\u2502       \u2514\u2500\u2500 \ud83d\udcc1 java\n\u2502           \u2514\u2500\u2500 \ud83d\udcc1 store\n\u2502               \u2514\u2500\u2500 \ud83d\udcc1 account\n\u2502                   \u251c\u2500\u2500 \ud83d\udcc4 AccountController.java\n\u2502                   \u251c\u2500\u2500 \ud83d\udcc4 AccountIn.java\n\u2502                   \u2514\u2500\u2500 \ud83d\udcc4 AccountOut.java\n\u2514\u2500\u2500 \ud83d\udcc4 pom.xml\n</code></pre> AccountControllerAccountInAccountOut AccountController.java<pre><code>package espm.account;\n\nimport lombok.Builder;\nimport lombok.experimental.Accessors;\n\n@Builder @Accessors(fluent = true)\npublic record AccountIn (\n    String name,\n    String email\n) {\n\n}\n</code></pre> AccountIn.java<pre><code>package espm.account;\n\nimport lombok.Builder;\nimport lombok.experimental.Accessors;\n\n@Builder @Accessors(fluent = true)\npublic record AccountIn (\n    String name,\n    String email\n) {\n\n}\n</code></pre> AccountOut.java<pre><code>package espm.account;\n\nimport lombok.Builder;\nimport lombok.experimental.Accessors;\n\n@Builder @Accessors(fluent = true)\npublic record AccountIn (\n    String name,\n    String email\n) {\n\n}\n</code></pre> Service <pre><code>\ud83d\udcc1 account-service\n\u251c\u2500\u2500 \ud83d\udcc1 src\n\u2502   \u2514\u2500\u2500 \ud83d\udcc1 main\n\u2502       \u251c\u2500\u2500 \ud83d\udcc1 java\n\u2502       \u2502   \u2514\u2500\u2500 \ud83d\udcc1 store\n\u2502       \u2502       \u2514\u2500\u2500 \ud83d\udcc1 account\n\u2502       \u2502           \u251c\u2500\u2500 \ud83d\udcc4 AccountResource.java\n\u2502       \u2502           \u251c\u2500\u2500 \ud83d\udcc4 AccountService.java\n\u2502       \u2502           \u251c\u2500\u2500 \ud83d\udcc4 AccountRepository.java\n\u2502       \u2502           \u251c\u2500\u2500 \ud83d\udcc4 Account.java\n\u2502       \u2502           \u251c\u2500\u2500 \ud83d\udcc4 AccountModel.java\n\u2502       \u2502           \u2514\u2500\u2500 \ud83d\udcc4 AccountParser.java\n\u2502       \u2514\u2500\u2500 \ud83d\udcc1 resources\n\u2502           \u2514\u2500\u2500 \ud83d\udcc4 application.yaml\n\u251c\u2500\u2500 \ud83d\udcc4 pom.xml\n\u2514\u2500\u2500 \ud83d\udcc4 Dockerfile\n</code></pre> pomapplicationAccountResource pom.yaml<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n    &lt;parent&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n        &lt;version&gt;3.3.3&lt;/version&gt;\n        &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;\n    &lt;/parent&gt;\n    &lt;groupId&gt;store&lt;/groupId&gt;\n    &lt;artifactId&gt;account-service&lt;/artifactId&gt;\n    &lt;version&gt;0.0.1&lt;/version&gt;\n    &lt;name&gt;account-service&lt;/name&gt;\n    &lt;properties&gt;\n        &lt;java.version&gt;21&lt;/java.version&gt;\n    &lt;/properties&gt;\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n            &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n            &lt;optional&gt;true&lt;/optional&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n\n    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n\n&lt;/project&gt;\n</code></pre> application.yaml<pre><code>server:\n  port: 8081\n\nspring:\n  application:\n    name: account-service\n</code></pre> AccountResource.java<pre><code>package store.account;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\npublic class AccountResource {\n\n    private static List&lt;String&gt; accounts = new ArrayList&lt;&gt;();\n\n    @GetMapping(\"/account\")\n    public List&lt;String&gt; getAccounts() {\n        return accounts;\n    }\n\n    @PostMapping(\"/account\")\n    public void postAccount(@RequestBody AccountIn in) {\n        accounts.add(in.name() + \": \" + in.email());\n    }\n\n}\n</code></pre>"}]}